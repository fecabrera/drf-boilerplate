name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_USER: admin
  POSTGRES_DB: data
  POSTGRES_HOST: db
  POSTGRES_PORT: 5432
  PYTHON_VERSION: "3.12"
  POSTGRES_VERSION: "14"

jobs:
  linter:
    runs-on: ubuntu-latest

    container:
      image: python:${{ env.PYTHON_VERSION }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python environment
      run: |
        pip install ruff

    - name: Run linter
      run: |
        ruff check .

  test:
    runs-on: ubuntu-latest
    needs: linter

    container:
      image: python:${{ env.PYTHON_VERSION }}

    services:
      db:
        image: postgres:${{ env.POSTGRES_VERSION }}
        env:
          POSTGRES_HOST_AUTH_METHOD: ${{ env.POSTGRES_HOST_AUTH_METHOD }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up base environment
      run: |
        # Install PostgreSQL repository signing key
        apt-get update && apt-get install -y wget lsb-release gnupg
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
        echo "deb https://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | tee /etc/apt/sources.list.d/pgdg.list
        
        # Update package lists and install required packages
        apt-get update && apt-get install -y postgresql-client-${{ env.POSTGRES_VERSION }} gettext
        
    - name: Set up Python environment
      run: |
        pip install pipenv
        pipenv install --dev --deploy --system

    - name: Run test suite with coverage
      run: |
        python -m coverage run manage.py test
        python -m coverage report

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image
      uses: docker/build-push-action@v6.16.0
      with:
        context: .
        file: Dockerfile
